Valid Parentheses

Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.
The brackets must close in the correct order, "()" and "()[]{}" are all valid but "(]" and "([)]" are not.

Code:

class Solution {
    map<char, char> m;
    void buildMap()
    {
        m[')'] = '(';
        m[']'] = '[';
        m['}'] = '{';
    }
public:
    bool isValid(string s) {
        if (s.empty())
            return 1;
        if (s.size() % 2)
            return 0;
        buildMap();
        vector<char> vec;
        for (int i = 0; i < s.size(); ++i)
        {
            if (s[i] == '(' || s[i] == '[' || s[i] == '{')
                vec.push_back(s[i]);
            else
            {
                if (vec.empty() || vec.back() != m[s[i]])
                    return 0;
                else
                    vec.pop_back();
            }
        }
        return vec.empty();
    }
};
